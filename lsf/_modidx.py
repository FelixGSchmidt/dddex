# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/lsf',
                'doc_host': 'https://kaiguender.github.io',
                'git_url': 'https://github.com/kaiguender/lsf',
                'lib_path': 'lsf'},
  'syms': { 'lsf.core': { 'lsf.core.BaseWeightsBasedPredictor': ('baseweightspredictor.html#baseweightsbasedpredictor', 'lsf/core.py'),
                          'lsf.core.BaseWeightsBasedPredictor.__init__': ( 'baseweightspredictor.html#baseweightsbasedpredictor.__init__',
                                                                           'lsf/core.py'),
                          'lsf.core.BaseWeightsBasedPredictor.fit': ( 'baseweightspredictor.html#baseweightsbasedpredictor.fit',
                                                                      'lsf/core.py'),
                          'lsf.core.BaseWeightsBasedPredictor.getWeightsData': ( 'baseweightspredictor.html#baseweightsbasedpredictor.getweightsdata',
                                                                                 'lsf/core.py'),
                          'lsf.core.BaseWeightsBasedPredictor.predict': ( 'baseweightspredictor.html#baseweightsbasedpredictor.predict',
                                                                          'lsf/core.py'),
                          'lsf.core.restructureWeightsDataList': ('baseweightspredictor.html#restructureweightsdatalist', 'lsf/core.py'),
                          'lsf.core.summarizeWeightsData': ('baseweightspredictor.html#summarizeweightsdata', 'lsf/core.py')},
            'lsf.levelSetForecaster': { 'lsf.levelSetForecaster.LevelSetForecaster': ( 'levelsetforecaster.html#levelsetforecaster',
                                                                                       'lsf/levelSetForecaster.py'),
                                        'lsf.levelSetForecaster.LevelSetForecaster.__init__': ( 'levelsetforecaster.html#levelsetforecaster.__init__',
                                                                                                'lsf/levelSetForecaster.py'),
                                        'lsf.levelSetForecaster.LevelSetForecaster.fit': ( 'levelsetforecaster.html#levelsetforecaster.fit',
                                                                                           'lsf/levelSetForecaster.py'),
                                        'lsf.levelSetForecaster.LevelSetForecaster.getWeightsData': ( 'levelsetforecaster.html#levelsetforecaster.getweightsdata',
                                                                                                      'lsf/levelSetForecaster.py'),
                                        'lsf.levelSetForecaster.generateBins': ( 'levelsetforecaster.html#generatebins',
                                                                                 'lsf/levelSetForecaster.py')},
            'lsf.wSAA': { 'lsf.wSAA.RandomForestWSAA': ('wsaa.html#randomforestwsaa', 'lsf/wSAA.py'),
                          'lsf.wSAA.RandomForestWSAA.fit': ('wsaa.html#randomforestwsaa.fit', 'lsf/wSAA.py'),
                          'lsf.wSAA.RandomForestWSAA.getWeightsData': ('wsaa.html#randomforestwsaa.getweightsdata', 'lsf/wSAA.py'),
                          'lsf.wSAA.RandomForestWSAA.pointPredict': ('wsaa.html#randomforestwsaa.pointpredict', 'lsf/wSAA.py'),
                          'lsf.wSAA.RandomForestWSAA.predict': ('wsaa.html#randomforestwsaa.predict', 'lsf/wSAA.py')}}}